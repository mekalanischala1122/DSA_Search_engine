
Dragonado rarely gets stuck on a problem, unless of course, if it's a XOR Problem.
Dragonado while coming back from the Fruit Market, finds an array A of N elements. He wants to find 4 integers, say i1​,i2​,i3​ and i4​, such that:

popcount(Ai1​​⊕Ai2​​)=popcount(Ai3​​⊕Ai4​​)
1≤i1​,i2​,i3​,i4​≤N and  i1​,i2​,i3​,i4​ are pairwise distinct.

Here, popcount(x) denotes the number of set bits in the binary representation of x. Secondly, ⊕ denotes the bitwise XOR operation.
Can you help Dragonado find four integers i1​,i2​,i3​ and i4​ which satisfy the given conditions?
Output −1 if no answer exists.
If multiple answers exist, output any.
Note: The input of this problem is large, so use fast input/output methods.
Input Format

The first line contains a single integer T - the number of test cases. Then the test cases follow.
The first line of each test case contains an integer N - the size of the array A.
The second line of each test case contains N space-separated integers A1​,A2​,…,AN​ denoting the array A.

Output Format
For each test case, output i1​,i2​,i3​,i4​ which satisfy the given conditions.
Output −1 if no numbers satisfying the conditions exist.
Constraints


1≤T≤104
4≤N≤105
1≤Ai​≤109
It is guaranteed that sum of N over all test cases does not exceed 2⋅106


Sample 1:
InputOutput2
4
1 2 5 6
4
1 2 3 4
1 4 2 3
-1
Explanation:
Test case-1: 1,4,2,3 is a valid answer because:

popcount(A1​⊕A4​)=popcount(7)=3
popcount(A2​⊕A3​)=popcount(7)=3

Therefore, popcount(Ai1​​⊕Ai2​​)=popcount(Ai3​​⊕Ai4​​)
Test case-2: We can prove that no i1​,i2​,i3​,i4​ exist that satisfy the given conditions.