
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
You are given a sequence A1​,A2​,…,AN​. You may perform the following operation any number of times: select any two adjacent elements Ai​ and Ai+1​ and replace one of them with 2Ai​+Ai+1​​ (a real number, i.e. without rounding). You may also select each pair of adjacent elements and each element to replace in multiple operations, i.e. any number of times.
Is it possible to make the sequence strictly increasing in a finite number of operations?
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer N.
The second line contains N space-separated integers A1​,A2​,…,AN​.

Output
For each test case, print a single line containing the string "Yes" if it is possible to make the sequence strictly increasing or "No" otherwise (without quotes).
You may print each character of each string in uppercase or lowercase (for example, the strings "yEs", "yes", "Yes" and "YES" will all be treated as identical).
Constraints

1≤T≤50,000
2≤N≤105
1≤Ai​≤109 for each valid i
the sum of N over all test cases does not exceed 106

Subtasks
Subtask #1 (100 points): original constraints
Sample 1:
InputOutput4
2
7 4
3
1 2 2
5
5 5 5 5 5
8
7 2 4 1 6 8 3 9No
Yes
No
Yes
Explanation:
Example case 1: Clearly, after any sequence of operations, A1​>A2​ holds, so it is impossible to make the sequence strictly increasing.
Example case 2:  Choose A1​ and A2​ and change A2​ to 21+2​. The sequence after this operation is [1,1.5,2], which is a strictly increasing sequence.
There may also be other valid sequences of operations that give a strictly increasing sequence.
Example case 3: No matter which pair of adjacent elements we choose, we can only change one of them to 25+5​=5, so the sequence always remains [5,5,5,5,5].