
You are given an integer C and an array A = A1​,A2​,…,AN​ which has distinct positive integers. It is guaranteed that Ai​≤C for 1≤i≤N. You have an infinite supply of coins of denomination Ai​ for 1≤i≤N. You have another array W=W1​,W2​,…WN​. This denotes that a single coin of denomination Ai​ has a weight of Wi​.
You are given M queries: Q1​,Q2​,…,QM​. You need to get a collection of coins, such that their values add up to exactly Qi​ (ie. sum of denominations), and the sum of their weights is minimized. Output this minimum weight, or say that it is impossible to get exactly a sum of Qi​. As the minimum weight could be huge, output it module 109+7.
Input:

The first line of the input contains three integers: N, C and M.
The i-th of the next N lines contains two numbers Ai​ and Wi​, which have been described above.
The i-th of the next M lines contains a single integer: Qi​.

Output:

M lines, each of which should contain a single integer. If it is possible to achieve the queried value, then your output should be the remainder when the minimum total weight is divided by 109+7.
If it is not possible to achieve the exact value in the query, print −1. Note that we do not take modulo anything here.

Constraints

1≤N≤C≤100
1≤M≤106
1≤Ai​≤C
Ai​=Aj​, if i=j
1≤Wi​≤109
1≤Qi​≤1018

Subtasks

12 points : 1≤Qi​≤106
88 points : No further constraints.

Sample Input:
3 100 2
2 50
8 1
3 40
9
7
### Sample Output:
120
140
### Explanation:

You can get a total value of 9 by taking three coins of denomination 3. Their total weight comes to 3∗40=120. You can check that you cannot do better than this.
You can get a total value of 7 by taking two coins of denomination 2 and one coin of denomination 3 ((2∗2)+3=7). Their total weight comes to (2∗50)+40=140. You can check that you cannot do better than this.