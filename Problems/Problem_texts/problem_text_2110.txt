
There are N stones in a pond, each having a value Ai​ written on it. A frog is at stone 1 and wants to reach stone N. The frog can jump from a stone i to any stone j(j>i). Let d be the length of subarray (i.e. j−i+1), then the energy required for the jump is (d⋅Ai​)−Aj​. Find the minimum non-negative amount of energy required by the frog to reach the N-th stone.
Note: It is possible that the total amount of energy required is negative, in that case, you should print the minimum non-negative value (i.e. 0).
Input Format

The first line contains an integer T - the number of test cases. Then the test cases follow.
The first line of each test case contains an integer N - the number of stones.
The second line contains N integers denoting the numbers written on the stones.

Output Format
For each test case output a single integer - the minimum non-negative energy required by the frog.
Constraints


1≤T≤2500 - the number of test cases
1≤N≤105 - the number of stones.
1≤Ai​≤109 - the number written on stones.
Sum of N over all test cases does not exceed 5⋅105


Subtasks


Subtask 1 (5 points): 1≤N≤10,1≤Ai​≤100,∑N≤50
Subtask 2 (10 points): 1≤N≤100,1≤Ai​≤100,∑N≤500
Subtask 3 (15 points): 1≤N≤1000,∑N≤5000
Subtask 4 (70 points): original constraints


Sample 1:
InputOutput4
3
6 1 3
4
3 1 10 4
3
7 9 1
2
1 510
4
20
0
Explanation:

Test Case 1: The frog can jump to the 2nd stone from the 1st stone, and then to the 3rd stone from the 2nd stone.
Test Case 3: The frog can jump to the 3rd stone directly from the 1st stone.
Test Case 4: The frog can jump to the 2nd stone from the 1st stone. However, the energy required in this case is negative (i.e. −3), So we will print 0.
