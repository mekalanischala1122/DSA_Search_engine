
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
You are given a rooted tree with N vertices (numbered 1 through N) and a prime number P. Vertex 1 is the root of the tree and for each v (2≤v≤N), the parent of vertex v is pv​ (pv​<v).
A vertex s is an ancestor of another vertex f if s lies on the path between 1 and f (in particular, f is its own ancestor). For two vertices u and v, let's define LCA(u,v) as the vertex s with the largest number which is an ancestor of both u and v. Similarly, for two vertices v and s, let Lv,s​ be the set of all vertices u such that s=LCA(u,v).
Let's define a set AP​ containing all sequences (indexed from 1) with length N whose elements are integers between 0 and P−1 inclusive. For two sequences a,b∈AP​, let's define an operation LCA-convolution as a sequence c=a∗b such that for each valid x, cx​=(i=1∑N​j∈Li,x​∑​ai​bj​)modP.
You are also given some sequence c∈AP​. You have two tasks:

Find the number of sequences a∈AP​ such that c=a∗a. Since this number can be large, compute it modulo 998,244,353.
Find a sequence a∈AP​ such that c=a∗a (if it exists).

Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains two space-separated integers N and P.
The second line contains N−1 space-separated integers p2​,p3​,…,pN​.
The third line contains N space-separated integers c1​,c2​,…,cN​.

Output
For each test case, print two lines:

The first of these lines should contain a single integer ― the number of sequences from the first task modulo 998,244,353.
If there is no sequence a∈AP​ such that c=a∗a, the second line should contain the integer −1.
Otherwise, the second line should contain N space-separated integers a1​,a2​,…,aN​, where a∈AP​ and c=a∗a should hold. If there is more than one such sequence, you may find any one of them.

Constraints

1≤T≤105
2≤N≤5⋅105
3≤P≤109+9
P is a prime
1≤pi​<i for each valid i
0≤ci​<P for each valid i
the sum of N over all test cases does not exceed 5⋅105

Subtasks
Subtask 1 (10 points, 1 second time limit):

T≤100
N≤6
P=3

Subtask 2 (30 points, 1 second time limit):

T≤100
the sum of N over all test cases does not exceed 1,000

Subtask 3 (60 points, 5 seconds time limit): original constraints
Example Input
3
6 3
1 1 2 3 2
1 2 0 1 1 1
5 3
1 1 1 3
2 1 0 2 1
9 101
1 1 2 3 2 4 3 5
18 77 44 82 4 20 19 43 97

Example Output
32
2 2 0 1 2 2
0
-1
64
3 70 5 76 20 11 25 12 81
